% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Results_generator.R
\name{plot_cri_across_outcomes}
\alias{plot_cri_across_outcomes}
\title{Plot posterior credible intervals across outcomes}
\usage{
plot_cri_across_outcomes(
  outcomes,
  outcome_labels = NULL,
  betas = NULL,
  load_beta = NULL,
  method = "HS",
  predictors,
  predictor_labels = NULL,
  group_map = NULL,
  group_levels = NULL,
  use_groups = TRUE,
  intercept_names = c("(Intercept)", "Intercept", "beta0", "beta_0", ""),
  cred_level = 0.95,
  star = c("mean", "median"),
  x_order = c("group", "given"),
  colors = NULL,
  add_brackets = TRUE,
  legend_title = "Outcome",
  show_legend = NULL,
  verbose = TRUE
  verbose = TRUE,
  base_size = 22
)
}
\arguments{
\item{outcomes}{Character vector of outcome keys (e.g., c("bladder","breast","prostate")).}

\item{outcome_labels}{Optional named character vector mapping key -> pretty name.
If omitted, the keys themselves are used.}

\item{betas}{Optional named list of posterior draw matrices (one per outcome).
Each matrix must be n_iter x p with column names = predictors (no intercept).
If NULL, supply \code{load_beta()}.}

\item{load_beta}{Optional loader function \code{function(outcome_key, method) -> matrix or NULL}
used when \code{betas} is NULL.}

\item{method}{Character label forwarded to \code{load_beta} (e.g., "HS" or "SS").}

\item{predictors}{Character vector of predictor names (defines order/inclusion; no intercept).}

\item{predictor_labels}{Optional named vector mapping predictor -> x-axis label.}

\item{group_map}{Optional named vector mapping predictor -> group name (for banding).}

\item{group_levels}{Optional character vector giving the order of groups under x-axis.}

\item{use_groups}{Logical; if FALSE, disables grouping entirely (ordering & brackets).}

\item{intercept_names}{Character vector of column names to drop if present.}

\item{cred_level}{Numeric ETI level in (0,1); default 0.95.}

\item{star}{"mean" or "median" for the point on each interval.}

\item{x_order}{"group" (grouped then predictor order) or "given" (exact \code{predictors} order).
If \code{use_groups=FALSE}, this is coerced to "given".}

\item{colors}{Optional color spec. Either a single color (character scalar) or
a named vector mapping pretty outcome names -> colors.}

\item{add_brackets}{Logical; add group brackets/labels beneath x-axis (only if grouping active).}

\item{legend_title}{Character; title for the outcome legend (default "Outcome").}

\item{show_legend}{NULL (auto: hide if one outcome), TRUE, or FALSE.}

\item{verbose}{Logical; print brief diagnostics.}

\item{base_size}{Base font size for theme (default 22).}
}
\value{
List with:
\item{plot}{ggplot object}
\item{data}{data.frame used to draw the plot}
\item{loaded}{diagnostics for loaded matrices}
\item{skipped}{diagnostics for skipped outcomes}
}
\description{
Generic plot of beta posterior ETI intervals across one or more outcomes
(e.g., cancers) for a shared predictor set. This function is mainly intended for the HS based methods (standard or goruped).
}
\examples{
\dontrun{
# Example with a single outcome (legend auto-hidden)
beta_mat <- matrix(rnorm(4000), ncol=4, dimnames=list(NULL, c("a","b","c","d")))
res1 <- plot_cri_across_outcomes(
  outcomes = "breast",
  outcome_labels = c(breast="Breast (female)"),
  betas = list(breast = beta_mat),
  predictors = c("a","b","c","d"),
  predictor_labels = c(a="A", b="B", c="C", d="D"),
  use_groups = FALSE,
  legend_title = "Cancer"
)
print(res1$plot)

# Multiple outcomes with grouping and custom legend title
betas <- list(
  bladder  = beta_mat,
  breast   = beta_mat,
  prostate = beta_mat
)
res2 <- plot_cri_across_outcomes(
  outcomes = c("bladder","breast","prostate"),
  outcome_labels = c(bladder="Bladder", breast="Breast (female)", prostate="Prostate (male)"),
  betas = betas,
  predictors = c("a","b","c","d"),
  predictor_labels = c(a="A", b="B", c="C", d="D"),
  group_map = c(a="Group 1", b="Group 1", c="Group 2", d="Group 2"),
  group_levels = c("Group 1","Group 2"),
  use_groups = TRUE,
  colors = c("Bladder"="#fec601","Breast (female)"="#FF3399","Prostate (male)"="#69B3E7"),
  legend_title = "Cancer Type"
)
print(res2$plot)
}

}
